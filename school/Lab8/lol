
–––––––––––––––––––––––––––––––––––––––––––––––
**Part 2: Forensic-based Snort 3 Rule Creation (Rules Requiring Screenshots)**

**2-2 (Alert – FTP Password Spraying):**  
```snort
alert tcp any any -> $HOME_NET 21 (
    msg:"FTP password spraying attempt with admin username";
    content:"USER admin";
    classtype:attempted-recon;
    priority:1;
    reference:url,https://snort.org/documents;
    sid:2000003;
    rev:1;
)
```  
**2-2-1 (Screenshot):**  
*(Insert screenshot of the Snort detection module output for the FTP password spraying rule here)*

---

**2-3 (Alert – DHCP Request):**  
```snort
alert udp any any -> 255.255.255.255 67 (
    msg:"DHCP Request detected: client requesting IP 192.168.1.100";
    content:"|35 01 03|";  # DHCP Message Type option (03 = DHCPREQUEST)
    content:"192.168.1.100";  # Hard-coded requested IP address
    sid:2000005;
    rev:1;
)
```  
**2-3-1 (Screenshot):**  
*(Insert screenshot of the alert output showing the DHCP request detection here)*

---

**2-5 (Alert – Specific IP Traffic):**  
```snort
alert ip 220.123.102.178 any -> 10.10.10.10 any (
    msg:"Traffic detected from 220.123.102.178 to 10.10.10.10";
    sid:2000009;
    rev:1;
)
```  
**2-5-1 (Screenshot):**  
*(Insert screenshot of the alert count or Snort console output for this rule here)*

–––––––––––––––––––––––––––––––––––––––––––––––
**Part 3: Live Capture Snort 3 Rule Creation (Rules Requiring Screenshots)**

**3-1 (Alert – HTTP Site Access):**  
```snort
alert tcp $EXTERNAL_NET any -> $HOME_NET 80 (
    msg:"HTTP access to httpforever.com detected";
    flow:to_server,established;
    http_header;
    content:"Host|3A| httpforever.com";
    sid:3000001;
    rev:1;
)
```  
**3-1-1 (Screenshot):**  
*(Insert screenshot showing the alert in your terminal with your browser displaying http://httpforever.com)*

---

**3-2 (Alerts – Live Capture Rules):**  

*Rule 1 – TLS Handshake Detection:*  
```snort
alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (
    msg:"TLS handshake (ClientHello) detected";
    flow:to_server,established;
    content:"|16 03|";
    offset:0;
    depth:2;
    sid:3000002;
    rev:1;
)
```  

*Rule 2 – HTTP Refresh Detection:*  
```snort
alert tcp $EXTERNAL_NET any -> $HOME_NET 80 (
    msg:"HTTP refresh detected via Cache-Control header";
    flow:to_server,established;
    http_header;
    content:"Cache-Control|3A| max-age=0";
    nocase;
    sid:3000003;
    rev:1;
)
```  

**3-2-2 (Screenshot PCAP):**  
*(Insert screenshot of your packet capture (e.g., Wireshark output) showing the TLS handshake and HTTP refresh packets)*

**3-2-3 (Screenshot Rules):**  
*(Insert screenshot of your final rule file displaying the above live capture rules)*

–––––––––––––––––––––––––––––––––––––––––––––––
**Command to Test Your Rules**  
To verify your Snort rules with a PCAP file, run the following command (adjusting the file names as appropriate):

```bash
snort -c /usr/local/etc/snort/snort.lua -R nameofyourrulefile.rules -r pcaps/yourtests.pcap
```

For example, if you are testing your forensic-based rules:  
- Test the FTP password spraying rule using:  
  ```bash
  snort -c /usr/local/etc/snort/snort.lua -R your_rules.rules -r pcaps/CCDC2022_ftpPasswordSpraying.pcap
  ```
- Test the DHCP rule using:  
  ```bash
  snort -c /usr/local/etc/snort/snort.lua -R your_rules.rules -r pcaps/dhcp.pcap
  ```
- Test the IPv4 traffic rule using:  
  ```bash
  snort -c /usr/local/etc/snort/snort.lua -R your_rules.rules -r pcaps/IPv4.pcap
  ```

For your live capture rules (Part 3), if you have saved the capture as a PCAP file, use its filename instead of _yourtests.pcap_; otherwise, run Snort in live mode as required.

