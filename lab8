## Part 1: Scenario-Based Rules

### **Scenario 1: Protecting Against a LOIC HTTP Flood**

**Rule 1-1A – Alert on LOIC HTTP GET Flood:**

```snort
alert tcp $EXTERNAL_NET any -> $HOME_NET 80 (
    msg:"LOIC HTTP GET flood detected - alert";
    flow:to_server,established;
    content:"GET";
    detection_filter: track by_src, count 10, seconds 1;
    reference:url,https://en.wikipedia.org/wiki/Low_Orbit_Ion_Cannon;
    sid:1000001;
    rev:1;
)
```

**Rule 1-1B – Block (Drop) LOIC HTTP GET Flood:**

```snort
drop tcp $EXTERNAL_NET any -> $HOME_NET 80 (
    msg:"LOIC HTTP GET flood blocked - drop";
    flow:to_server,established;
    content:"GET";
    detection_filter: track by_src, count 10, seconds 1;
    reference:url,https://en.wikipedia.org/wiki/Low_Orbit_Ion_Cannon;
    sid:1000002;
    rev:1;
)
```

---

### **Scenario 2: Protecting Against a Ping of Death**

**Rule 1-2A – Alert on Ping of Death (ICMP with dsize >60000):**

```snort
alert icmp any any -> $HOME_NET any (
    msg:"Ping of Death detected - alert";
    dsize:!0-60000;
    reference:url,https://en.wikipedia.org/wiki/Ping_of_death;
    sid:1000003;
    rev:1;
)
```

**Rule 1-2B – Block on Ping of Death:**

```snort
drop icmp any any -> $HOME_NET any (
    msg:"Ping of Death detected - block";
    dsize:!0-60000;
    reference:url,https://en.wikipedia.org/wiki/Ping_of_death;
    sid:1000004;
    rev:1;
)
```

---

### **Scenario 3: Detecting Swoop’s Unauthorized Email**

**Rule 1-3 – Alert on SMTP Containing the Chocolate Milk Formula:**

```snort
alert tcp 10.42.124.0/22 any -> any 25 (
    msg:"Alert: Swoop attempting to email the chocolate milk formula";
    flow:to_server,established;
    content:"Cosmo's Super-Secret Chocolate Milk Formula";
    reference:url,https://en.wikipedia.org/wiki/Email;
    sid:1000005;
    rev:1;
)
```

---

## Part 2: Forensic-Based Rules Using PCAPs

### **2-1: Analysis of mystery.pcap (SYN Flood Detection)**

**Rule 2-1A – Log Every TCP SYN Request:**

```snort
log tcp any any -> $HOME_NET any (
    msg:"TCP SYN request logged";
    flags:S;
    reference:url,https://docs.snort.org/;
    sid:2000001;
    rev:1;
)
```

**Rule 2-1B – Alert When More Than 8 SYNs/Second Occur:**

```snort
alert tcp any any -> $HOME_NET any (
    msg:"Possible SYN flood attack detected - more than 8 SYNs per second";
    flags:S;
    detection_filter: track by_src, count 9, seconds 1;
    reference:url,https://docs.snort.org/;
    classtype:attempted-dos;
    sid:2000002;
    rev:1;
)
```

---

### **2-2: Analysis of CCDC2022_ftpPasswordSpraying.pcap**

**Rule 2-2A – Alert on FTP Login Attempt with “admin”:**

```snort
alert tcp any any -> $HOME_NET 21 (
    msg:"FTP password spraying attempt with admin username";
    content:"USER admin";
    classtype:attempted-recon;
    priority:1;
    reference:url,https://snort.org/documents;
    sid:2000003;
    rev:1;
)
```

**Rule 2-2B – Alert on FTP Login Attempt with “root”:**

```snort
alert tcp any any -> $HOME_NET 21 (
    msg:"FTP password spraying attempt with root username";
    content:"USER root";
    classtype:attempted-recon;
    priority:1;
    reference:url,https://snort.org/documents;
    sid:2000004;
    rev:1;
)
```

---

### **2-3: Analysis of dhcp.pcap (DHCP Handshake Detection)**

**Rule 2-3 – Alert on DHCP Request (using Hex-byte matching):**

```snort
alert udp any any -> 255.255.255.255 67 (
    msg:"DHCP Request detected: client requesting IP 192.168.1.100";
    content:"|35 01 03|";  # DHCP Message Type option (03 = DHCPREQUEST)
    content:"192.168.1.100";  # Hard-coded requested IP address
    sid:2000005;
    rev:1;
)
```

*Note:* Adjust the IP address (192.168.1.100) if your lab specifies a different target.

---

### **2-4: Analysis of amp.UDP.manyprotocols.pcapng (Detect Specific UDP Protocols)**

**Rule 2-4A – Alert on DNS Traffic:**

```snort
alert udp any any -> $HOME_NET 53 (
    msg:"DNS query detected";
    reference:url,https://www.iana.org/domains/root;
    sid:2000006;
    rev:1;
)
```

**Rule 2-4B – Alert on NTP Traffic:**

```snort
alert udp any any -> $HOME_NET 123 (
    msg:"NTP traffic detected";
    reference:url,https://en.wikipedia.org/wiki/Network_Time_Protocol;
    sid:2000007;
    rev:1;
)
```

**Rule 2-4C – Alert on SNMP Traffic:**

```snort
alert udp any any -> $HOME_NET 161 (
    msg:"SNMP traffic detected";
    reference:url,https://en.wikipedia.org/wiki/Simple_Network_Management_Protocol;
    sid:2000008;
    rev:1;
)
```

---

### **2-5: Analysis of pkt.IPV4.randomprotofield.pcap (Specific IP Traffic Detection)**

**Rule 2-5 – Alert on Traffic from 220.123.102.178 to 10.10.10.10:**

```snort
alert ip 220.123.102.178 any -> 10.10.10.10 any (
    msg:"Traffic detected from 220.123.102.178 to 10.10.10.10";
    sid:2000009;
    rev:1;
)
```

---

## Part 3: Live Capture Rules

### **3-1: Alert on HTTP Access to http://httpforever.com**

```snort
alert tcp $EXTERNAL_NET any -> $HOME_NET 80 (
    msg:"HTTP access to httpforever.com detected";
    flow:to_server,established;
    http_header;
    content:"Host|3A| httpforever.com";
    sid:3000001;
    rev:1;
)
```

*Test by running Snort in live mode and then visiting http://httpforever.com in your browser.*

---

### **3-2: Additional Live-Capture Rules**

For example, you might include rules for detecting FTP login attempts and Telnet session initiations in a high-density traffic environment:

**Rule 3-2A – Alert on FTP Login Attempt (Live):**

```snort
alert tcp any any -> $HOME_NET 21 (
    msg:"Live capture: FTP login attempt detected";
    flow:to_server,established;
    content:"USER";
    sid:3000002;
    rev:1;
)
```

**Rule 3-2B – Alert on Telnet Session Initiation (Live):**

```snort
alert tcp any any -> $HOME_NET 23 (
    msg:"Live capture: Telnet session initiated";
    flow:to_server,established;
    content:"Telnet";
    sid:3000003;
    rev:1;
)
```

---

## Testing Your Rules

1. **Folder Structure Reminder:**  
   - **L8Pcaps/** – Contains all the provided PCAP files.  
   - **p1/** – Contains your Part 1 scenario-based rule files.  
   - **p2/** – Contains your forensic (PCAP-based) rule files.  
   - **p3/** – Contains your live-capture rule files.

2. **Run a Test Command:**  
   For example, to test the DHCP rule with the dhcp.pcap file, run:

   ```bash
   snort -c /usr/local/etc/snort/snort.lua -R p2/p3.rules -r L8Pcaps/dhcp.pcap
   ```

3. **Expected Outputs:**  
   - **Alert Rules:** The console or log output should display your custom alert messages when matching traffic is detected.  
   - **Drop Rules:** Even if running against a PCAP, an associated alert message should still appear.  
   - **Detection Filters:** For instance, if using the SYN flood detection rule against mystery.pcap, you should see alerts only when the threshold is exceeded.  
   - **Live Capture:** When running in live mode (e.g., for httpforever.com), you should see alerts in the terminal as you generate the traffic.

4. **Verification:**  
   Use Wireshark to verify that the PCAP files contain the expected traffic patterns (e.g., the DHCPREQUEST message, FTP login attempts, etc.).  
   Adjust thresholds or content strings if necessary.

